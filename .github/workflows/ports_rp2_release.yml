name: rp2 port release

on:
  push:
    branches:
      - stable-version-branch

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'micropython repo'
    steps:
    - uses: actions/checkout@v4
      with:
        path: 'micropython repo'
        fetch-depth: 0  # Fetch all tags and history for tag detection

    - name: Update all submodules recursively
      run: git submodule update --init --recursive
      working-directory: 'micropython repo'

    - name: Install packages
      run: source tools/ci.sh && ci_rp2_setup

    - name: Build (with workaround for pico-extras warnings)
      # CFLAGS_EXTRA is set to avoid build failure due to upstream warning-as-error
      run: source tools/ci.sh && ci_rp2_build_with_cflags_extra

    - name: Upload firmware.uf2 as artifact
      uses: actions/upload-artifact@v4
      with:
        name: firmware.uf2
        path: 'micropython repo/ports/rp2/build-RPI_PICO/firmware.uf2'

    - name: Get upstream stable tag name merged into HEAD
      id: get_tag
      run: |
        # HEADに付いているタグがあればそれを使う
        TAG=$(git tag --points-at HEAD | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n1)
        if [ -z "$TAG" ]; then
          # HEADにタグが無い場合、HEADにマージ済みのupstream安定版タグ（v1.25.0など）を取得
          TAG=$(git tag -l --merged HEAD | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n1)
          if [ -z "$TAG" ]; then
            echo "No suitable upstream stable tag found merged into HEAD"
            exit 1
          fi
        fi
        echo "tag_name=$TAG" >> $GITHUB_OUTPUT

    - name: Check if tag exists in origin
      run: |
        if git ls-remote --tags origin | grep "refs/tags/${{ steps.get_tag.outputs.tag_name }}$"; then
          echo "Tag already exists in origin"
          exit 1
        fi

    - name: Create tag and push
      run: |
        git tag ${{ steps.get_tag.outputs.tag_name }}
        git push origin ${{ steps.get_tag.outputs.tag_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate release notes
      id: notes
      run: |
        echo "## Release for tag ${{ steps.get_tag.outputs.tag_name }}" > release.txt
        echo "" >> release.txt
        echo "This release reflects updates from the upstream MicroPython repository." >> release.txt
        echo "" >> release.txt
        echo "### Commits since previous tag:" >> release.txt
        git log --oneline $(git describe --tags --abbrev=0 @^)..@ >> release.txt
        BODY=$(cat release.txt)
        echo "body<<EOF" >> $GITHUB_OUTPUT
        echo "$BODY" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.get_tag.outputs.tag_name }}
        name: Release ${{ steps.get_tag.outputs.tag_name }}
        body: ${{ steps.notes.outputs.body }}
        files: 'micropython repo/ports/rp2/build-RPI_PICO/firmware.uf2'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
